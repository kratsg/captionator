doctype html
html
  head
    title= title

    link(rel='stylesheet', href='/css/normalize.css')
    script(src='/socket.io/socket.io.js')
    script(src='/js/jquery-2.2.0.min.js')

    meta(name='viewport', content='user-scalable=no, width=device-width, initial-scale=1, maximum-scale=1')
    meta(name='msapplication-tap-highlight', content='no')

    // Latest compiled and minified CSS
    link(rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css" integrity="sha384-1q8mTJOASx8j1Au+a5WDVnPi2lkFfwwEAa8hDDdjZlpLegxhjVME1fgjWPGmkzs7" crossorigin="anonymous")

    // Add FontAwesome
    link(rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css")

    script.
        var socket = io.connect('', {
            query: 'token=#{locals.jwt}'
        });
        socket.on('connect', function() {
            console.log('connected and authenticated socket');
            $('body').addClass('online').removeClass('error');
            $('#connectionStatus').removeAttr('data-err-msg');
        });
        socket.on('disconnect', function() {
            console.log('disconnected socket');
            $('body').removeClass('online').addClass('error')
            $('#connectionStatus').attr('data-err-msg', 'offline. Reconnecting...');
        });
        socket.on("error", function(error) {
            $('body').removeClass('online').addClass('error');
            $('#connectionStatus').attr('data-err-msg', 'unknown. Tell Giordon.');
            if (error.type == "UnauthorizedError" || error.code == "invalid_token") {
                console.log("User's token has expired");
                $('#connectionStatus').attr('data-err-msg', 'token expired. Please refresh.');
            }
        });

    link(rel='stylesheet', href='/css/dark.css')
    link(rel='stylesheet', href='/css/play.css')
    link(rel='stylesheet', href='/css/#{playName}.css')
    if !client
        link(rel='stylesheet', href='/css/control.css')
    script.
        window.playName = "#{playName}";
    script(src='/js/mousetrap.min.js')
    script.
        socket.on('connect', function(){
            socket.emit('subscribe', window.playName);
        });

    body
        div#connectionStatus
        div#viewerStatus(data-unauthUsers='0')
        div.gridElement#gridMinor
        div.gridElement#gridMajor
        - var slideIndex = 0
        each item in corpus
            if item instanceof Array
                // item is a single slide, iterate over it
                div.slide(class=(slideIndex == currIndex ? "active" : undefined)).container-fluid
                    each line in item
                        if typeof(line) == 'string'
                          - throw Error('You gave me a line without a character: "'+line+'"')
                        section.line.row
                            each dialogue, character in line
                                div.character(data-character=character.toLowerCase()).col-xs-12.col-sm-2= character
                                if dialogue instanceof Array
                                    <!-- multiple lines for #{character} -->
                                    - dialogue = dialogue.join('<br/>')
                                div.dialogue.col-xs-12.col-sm-10!= dialogue
                            div.clear
                - slideIndex++
            else
                // item is multiple slides
                each lines, character in item
                    unless lines instanceof Array
                        - lines = [lines]
                    if typeof(character) == 'number'
                      - throw Error('You gave at least one line without a character: '+item)
                    each dialogue in lines
                        div.slide(class=(slideIndex == currIndex ? "active" : undefined)).container-fluid
                            section.line.row
                                div.character(data-character=character.toLowerCase()).col-xs-12.col-sm-2= character
                                if dialogue instanceof Array
                                    <!-- multiple lines for #{character} -->
                                    - dialogue = dialogue.join('<br/>')
                                div.dialogue.col-xs-12.col-sm-10!= dialogue
                                div.clear
                        - slideIndex++
        script(src='/js/play.js')
        if !client
            script(src='/js/hammer.min.js')
            script(src='/js/playControl.js')

